import{c as e,_ as t,n as s,t as i,s as n,at as d,x as o,e as a,di as r,ay as h,av as c,dj as l,dk as u,l as p,d as m}from"./shell-3578e6f9.js";import{r as g}from"./requestGql-6df7d358.js";let S=class extends n{constructor(){super(...arguments),this.notificationId="",this.hasLink="",this.isHidden=!1,this.hide=()=>this.isHidden=!0,this.onClick=async e=>((!this.hasLink||this.isEventFromElementWithLinkBlocking(e))&&e.preventDefault(),await this.fireReadEvent(),!1),this.isEventFromElementWithLinkBlocking=e=>!!e?.target?.closest('[data-id="notification-item-prevent-link"]'),this.getUnreadChildElement=()=>this.querySelector(".bg-secondary-background-selected"),this.fireReadEvent=async()=>{const e=this.getUnreadChildElement();if(e){e.classList.remove("bg-secondary-background-selected");try{this.notificationId.includes("_")?await g({operation:d.MarkNotificationReadWithThingId,variables:{input:{messageId:this.notificationId}}}):await g({operation:d.MarkNotificationRead,variables:{input:{notificationId:this.notificationId}}})}catch(e){}}}}firstUpdated(){this.querySelector("a")?.addEventListener("click",this.onClick),this.querySelector("a")?.addEventListener("notification-hide-event",this.hide)}render(){return o`<div class="${this.isHidden?"hidden":""}"><slot></slot></div>`}};S.styles=[e],t([s({type:String})],S.prototype,"notificationId",void 0),t([s({type:Boolean})],S.prototype,"hasLink",void 0),t([i()],S.prototype,"isHidden",void 0),S=t([a("notification-item")],S);const b=new Event("notification-hide-event",{bubbles:!0});let f=class extends n{constructor(){super(...arguments),this.messageType=null,this.notificationId="",this.userId="",this.userName="",this.postId="",this.commentId="",this.subredditId="",this.shouldRenderDisableUpdates=()=>this.messageType&&(this.postId&&[r.TopLevelComment,r.PostReply].includes(this.messageType)||this.commentId&&[r.CommentReply,r.ThreadReplies].includes(this.messageType)),this.shouldRenderDisableUpdatesFromSubreddit=()=>this.subredditId&&this.messageType&&[r.TrendingGeo,r.SubredditRecommendation].includes(this.messageType),this.shouldRenderBlockThisUser=()=>this.userId&&this.userName&&this.messageType&&[r.ChatAcceptInvite,r.ChatMessage,r.ChatMessageReaction,r.ChatRequest,r.AwardReceived].includes(this.messageType),this.shouldRenderSeeLessFromSubreddit=()=>this.subredditId&&this.messageType&&[r.SubredditUpdatesInterestingPost,r.LifecyclePostSuggestions].includes(this.messageType),this.hideNotification=async()=>{try{if((await h({operation:d.DeleteInboxNotifications,variables:{input:{notificationIds:[this.notificationId]}}})).data.deleteInboxNotifications?.ok)return this.showAlert({level:c.notice,message:"Success! You won't see updates on this in the future"}),void this.dispatchEvent(b)}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesFromSubreddit=async e=>{try{if((await h({operation:d.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isUpdateFromSubredditEnabled:e}}})).data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({isDo:!e,doConfig:{message:"Success! You won't see updates from this subreddit in the future.",undoOnClick:()=>this.changeUpdatesFromSubreddit(!0)},undoConfig:{message:"Success! Hiding updates from this subreddit has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeSeeLessFromSubreddit=async e=>{try{if((await h({operation:d.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isSubredditUpdatesInterestingPostEnabled:e}}})).data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({isDo:!e,doConfig:{message:"Success! You'll see less from this subreddit in the future.",undoOnClick:()=>this.changeSeeLessFromSubreddit(!0)},undoConfig:{message:"Success! Seeing less from this subreddit has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesOnThisPost=async e=>{try{if((await h({operation:d.UpdatePostSendRepliesState,variables:{input:{postId:this.postId,sendRepliesState:e?l.Send:l.DoNotSend}}})).data.updatePostSendRepliesState?.ok)return void this.handleAlerts({isDo:!e,doConfig:{message:"Success! You won't see updates on this post in the future.",undoOnClick:()=>this.changeUpdatesOnThisPost(!0)},undoConfig:{message:"Success! Hiding updates has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesOnThisComment=async e=>{try{if((await h({operation:d.UpdateCommentSendRepliesState,variables:{input:{commentId:this.commentId,sendRepliesState:e?l.Send:l.DoNotSend}}})).data.updateCommentSendRepliesState?.ok)return void this.handleAlerts({isDo:!e,doConfig:{message:"Success! You won't see updates on this comment in the future.",undoOnClick:()=>this.changeUpdatesOnThisComment(!0)},undoConfig:{message:"Success! Hiding updates has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUserBlockStatus=async e=>{try{if((await h({operation:d.UpdateRedditorBlockState,variables:{input:{redditorId:this.userId,blockState:e}}})).data.updateRedditorBlockState?.ok)return void this.handleAlerts({isDo:e===u.Blocked,doConfig:{message:`u/${this.userName} is now blocked.`,undoOnClick:()=>this.changeUserBlockStatus(u.None)},undoConfig:{message:`u/${this.userName} is now unblocked.`}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.handleAlerts=({isDo:e,doConfig:t,undoConfig:s})=>{e?this.showAlert({level:c.notice,message:t.message,undoOnClick:t.undoOnClick}):this.showAlert({level:c.notice,message:s.message})},this.showAlert=({level:e=c.error,message:t="Something went wrong",undoOnClick:s})=>this.dispatchEvent(p("faceplate-alert",{level:e,message:t,namedContent:s?{action:o`${m({children:"Undo",attributes:{onclick:s}})}`}:void 0})),this.renderHideThisNotification=()=>this.renderMenuElement({children:"Hide this notification",onclick:this.hideNotification,dataTestId:"hide-this-notification"}),this.renderDisableUpdates=()=>this.renderMenuElement({children:"Donâ€™t get updates on this",onclick:()=>this.postId?this.changeUpdatesOnThisPost(!1):this.changeUpdatesOnThisComment(!1),dataTestId:"block-updates-from-post-or-comment"}),this.renderDisableUpdatesFromSubreddit=()=>this.renderMenuElement({children:"Disable updated from this community",onclick:()=>this.changeUpdatesFromSubreddit(!1),dataTestId:"block-updates-from-subreddit"}),this.renderBlockThisUser=()=>this.renderMenuElement({children:"Block this user ",onclick:()=>this.changeUserBlockStatus(u.Blocked),dataTestId:"block-user"}),this.renderSeeLessFromSubreddit=()=>this.renderMenuElement({children:"See less from this community",onclick:()=>this.changeSeeLessFromSubreddit(!1),dataTestId:"see-less"}),this.renderMenuElement=({children:e,onclick:t,dataTestId:s})=>o`\n ${m({children:e,attributes:{onclick:t,className:"!p-0 !m-0 !bg-transparent rounded-none","data-test-id":s}})}\n `}render(){return o`<div class="flex flex-col">\n ${this.renderHideThisNotification()}\n ${this.shouldRenderDisableUpdates()?this.renderDisableUpdates():""}\n ${this.shouldRenderBlockThisUser()?this.renderBlockThisUser():""}\n ${this.shouldRenderDisableUpdatesFromSubreddit()?this.renderDisableUpdatesFromSubreddit():""}\n ${this.shouldRenderSeeLessFromSubreddit()?this.renderSeeLessFromSubreddit():""}\n </div>`}};f.styles=[e],t([s({type:String})],f.prototype,"messageType",void 0),t([s({type:String})],f.prototype,"notificationId",void 0),t([s({type:String})],f.prototype,"userId",void 0),t([s({type:String})],f.prototype,"userName",void 0),t([s({type:String})],f.prototype,"postId",void 0),t([s({type:String})],f.prototype,"commentId",void 0),t([s({type:String})],f.prototype,"subredditId",void 0),f=t([a("notification-context-menu")],f);
//# sourceMappingURL=notifications-inbox-client-js-bde52118.js.map
